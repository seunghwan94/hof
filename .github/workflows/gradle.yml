name: Spring Boot CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE_NAME: sounghan94/hof-0.0.1-snapshot

jobs:
  build-and-deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission to Gradle wrapper
      run: chmod +x ./gradlew

    - name: Clean build cache
      run: ./gradlew clean

    - name: Deploy to EC2 and Build Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          echo "Cloning Repository on EC2..."
          if [ ! -d "hof-back" ]; then
            git clone https://github.com/seunghwan94/hof-back.git
          fi
          cd hof-back
          git pull

          echo "Setting up environment variables..."
          export SPRING_PROFILES_ACTIVE=ci
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export DB_URL=hof-rds.cxaew4qaobla.ap-northeast-2.rds.amazonaws.com
          export DB_USERNAME=admin
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          echo "Installing MariaDB Client on EC2..."
          sudo apt-get update && sudo apt-get install -y mariadb-client
          
          echo "Testing RDS Connection from EC2..."
          mysql -h hof-rds.cxaew4qaobla.ap-northeast-2.rds.amazonaws.com -u admin -p'${{ secrets.DB_PASSWORD }}' -e "SHOW DATABASES;"

          echo "Building application on EC2..."
          chmod +x ./gradlew
          ./gradlew build

          echo "Stopping and removing old container..."
          CONTAINER_NAME="hof-container"
          if sudo docker ps -a --format "{{.Names}}" | grep -w "$CONTAINER_NAME"; then
            sudo docker stop $CONTAINER_NAME
            sudo docker rm $CONTAINER_NAME
          fi

          echo "Pulling latest Docker image..."
          sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}

          echo "Starting new container..."
          sudo docker run --name $CONTAINER_NAME -d -p 8081:8080 \
            -e TZ=Asia/Seoul \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e DB_URL=hof-rds.cxaew4qaobla.ap-northeast-2.rds.amazonaws.com \
            -e DB_USERNAME=admin \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            ${{ env.DOCKER_IMAGE_NAME }}
